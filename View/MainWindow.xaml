<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:View"
        xmlns:viewmodels="clr-namespace:View.ViewModels"
        xmlns:views="clr-namespace:View.Views"
        xmlns:System="clr-namespace:System;assembly=System.Runtime" x:Name="Index" x:Class="View.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="1024" Width="1440">
    <Window.Resources>
        <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#4F83CC" Offset="0.0"/>
                    <GradientStop Color="#4F83CC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#4F83CC" />
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border" Grid.ColumnSpan="2"
                    Background="{StaticResource NormalBrush}"
                    BorderThickness="0" />
                <Border 
                    Grid.Column="0"
                    CornerRadius="2,0,0,2" 
                    Margin="1" 
                    Background="{StaticResource WindowBackgroundBrush}" 
                    BorderThickness="0,0,1,0" />
                <Path
                    x:Name="Arrow"
                    Grid.Column="1"     
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 4 4 L 8 0 Z" Fill="White"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="RoundedButton" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                        BorderThickness="3"
                        Padding="4,2" 
                        BorderBrush="#FFFF72" 
                        CornerRadius="5" 
                        Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF4F83CC" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HoverOverPlaylistText" TargetType="Label">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <Border Name="border" 
                        BorderThickness="3"
                        Padding="4,2" 
                        BorderBrush="#FFFF72" 
                        CornerRadius="0" 
                        Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF4F83CC" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton 
                                Name="ToggleButton" 
                                Template="{StaticResource ComboBoxToggleButton}" 
                                Grid.Column="2" 
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter
                                Name="ContentSite"
                                Margin="3,3,3,3"
                                Width="98"
                                Height="25"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left" OpacityMask="White" />
                            <Popup 
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True" 
                                Focusable="False"
                                PopupAnimation="Slide">
                                <Grid 
                                    Name="DropDown"
                                    SnapsToDevicePixels="True"                
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                        x:Name="DropDownBorder"
                                        Background="{StaticResource WindowBackgroundBrush}"
                                        BorderThickness="1"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TextBoxStyle1" BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <TextBox x:Name="textSource" Background="Transparent" Text="{Binding Text, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Panel.ZIndex="2" Foreground="White" BorderBrush="#FF4F83CC" SelectionBrush="#FFFFFF72" SelectionTextBrush="Black" VerticalContentAlignment="Center"/>
                            <TextBox Background="{TemplateBinding Background}" Text="{TemplateBinding Tag}" Panel.ZIndex="1" SelectionBrush="#FFFFFF72" VerticalContentAlignment="Center" Padding="5,0,0,0" UseLayoutRounding="False" BorderBrush="#FF4F83CC">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="#00FFFFFF"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Foreground" Value="#70FFFFFF"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Name="homepage" DataType="{x:Type viewmodels:Homepage}">
            <views:Homepage DataContext="{Binding}" />
        </DataTemplate>
        <DataTemplate x:Name="artist" DataType="{x:Type viewmodels:Artist}">
            <views:Artist DataContext="{Binding}" />
        </DataTemplate>
        <DataTemplate x:Name="searchArtistViewModel" DataType="{x:Type viewmodels:SearchArtistViewModel}">
            <views:SearchArtist DataContext="{Binding}" />
        </DataTemplate>
        <DataTemplate x:Name="SearchSongModel" DataType="{x:Type viewmodels:SearchSongModel}">
            <views:SearchSong DataContext="{Binding}" />
        </DataTemplate>
        <DataTemplate x:Name="SearchAlbumViewModel" DataType="{x:Type viewmodels:SearchAlbumViewModel}">
            <views:SearchAlbum DataContext="{Binding}" />
        </DataTemplate>
        
        <Style x:Key="SliderRepeatButton" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border  BorderThickness="1" BorderBrush="White" Background="white" Height="3"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderRepeatButton1" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border SnapsToDevicePixels="True" Background="#FFFF72"  BorderThickness="1" BorderBrush="#FFFF72" Height="3"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderThumb" TargetType="Thumb">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Ellipse Height="15" Width="15">
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="HeartChecked.png"></ImageBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="Slider"  TargetType="Slider">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Track Grid.Row="1" x:Name="PART_Track"   >
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButton1}"  Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumb}"  />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButton}" Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
            </Grid>
        </ControlTemplate>

        <Style x:Key="Horizontal_Slider" TargetType="Slider">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="MinHeight" Value="21" />
                    <Setter Property="MinWidth" Value="104" />
                    <Setter Property="Template" Value="{StaticResource Slider}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Image x:Key="Play_icon" Source="Play.png"/>
        <Image x:Key="Pause_icon" Source="Pause.png"/>
        <Image x:Key="ShuffleUnChecked_icon" Source="Shuffle.png"/>
        <Image x:Key="ShuffleChecked_icon" Source="ShuffleChecked.png"/>
        <Image x:Key="RepeatChecked_icon" Source="RepeatChecked.png"/>
        <Image x:Key="RepeatUnchecked_icon" Source="Repeat.png"/>
        <Image x:Key="HeartChecked_icon" Source="HeartChecked.png"/>
        <Image x:Key="HeartUnchecked_icon" Source="Rectangle.png"/>

        <Style TargetType="{x:Type ToggleButton}" x:Key="PausePlay">
            <Setter Property="Content" Value="{DynamicResource Play_icon}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="/Play.png"/>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content" Value="{DynamicResource Pause_icon}" />
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush ImageSource="/Pause.png"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush ImageSource="/Pause.png"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type ToggleButton}" x:Key="Repeat">
            <Setter Property="Content" Value="{DynamicResource RepeatUnchecked_icon}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="/Repeat.png"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content" Value="{DynamicResource RepeatChecked_icon}" />
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush ImageSource="/RepeatChecked.png"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush ImageSource="/RepeatChecked.png"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type ToggleButton}" x:Key="Heart" x:Name="Heart">
            <Setter Property="Content" Value="{DynamicResource HeartUnchecked_icon}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="/Rectangle.png"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content" Value="{DynamicResource HeartChecked_icon}" />

                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush ImageSource="/HeartChecked.png"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush ImageSource="/HeartChecked.png"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type ToggleButton}" x:Key="Shuffle">
            <Setter Property="Content" Value="{DynamicResource ShuffleUnChecked_icon}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="/Shuffle.png"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content" Value="{DynamicResource ShuffleChecked_icon}"/>

                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush ImageSource="/ShuffleChecked.png"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush ImageSource="/ShuffleChecked.png"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="PrevNext">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    

    <Grid Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="90" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid Grid.Row="1" Grid.ColumnSpan="2" Background="#E54F83CC">
            <Grid.Effect>
                <BlurEffect/>
            </Grid.Effect>
        </Grid>
        <Grid Grid.Row="0" Grid.Column="0" Background="#FFFF72">
            <Label Content="Windefy" FontSize="35" Margin="10,30,0,0" />

            <ScrollViewer VerticalScrollBarVisibility="Auto">

                <Grid  Background="Transparent" Margin="10,50,5,0" Height="749" >
                    <Label FontSize="25" Content="Browse" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <Label FontSize="20" Content="Explore" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="45,48,0,0"/>
                    <Label FontSize="20" Content="Recommended" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="45,90,0,0"/>

                    <Label FontSize="25" Content="Favorites" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="-1,144,0,0"/>
                    <Label FontSize="20" Content="Artists" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="44,192,0,0" MouseDown="Label_MouseDown"/>
                    <Label FontSize="20" Content="Albums" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="44,234,0,0"/>
                    <Label FontSize="20" Content="Songs" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="45,276,0,0" RenderTransformOrigin="0.587,-0.614"/>

                    <Grid Margin="0,331,0,0">
                        <Label FontSize="25" Content="Playlists" HorizontalAlignment="Left" VerticalAlignment="Top" />
                        <Button x:Name="Playlist_Plus_Button" Content="" Margin="0,10,9,0" Width="27" Height="27" BorderBrush="#00707070" Click="Playlist_Plus_Button_Click" HorizontalAlignment="Right" VerticalAlignment="Top">
                            <Button.Background>
                                <ImageBrush ImageSource="/Plus.png"/>
                            </Button.Background>
                        </Button>

                        <ItemsControl x:Name="LeftSideBarPlayLists" Margin="0,0,0,-48">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Columns="1" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" Margin="25,30,0,0" VerticalAlignment="Center">
                                        <Button x:Name="Playlist_Plus_Button" Content="" Width="42" Height="42" Style="{StaticResource RoundedButton}">
                                            <Button.Background>
                                                <ImageBrush ImageSource="/Assets/Images/mockSongImage.jpg"/>
                                            </Button.Background>
                                        </Button>
                                        <Label Content="{Binding title}" FontFamily="Segoe" FontSize="20" Style="{StaticResource HoverOverPlaylistText}" ToolTip="{Binding title}"></Label>

                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                </Grid>
            </ScrollViewer>
        </Grid>
        <Grid Grid.Row="0" Grid.Column="1" Background="White">
            <ContentControl Content="{Binding}" />
            <Border CornerRadius="5"/>
            <Button x:Name="Account_Button" Content="" Margin="0,24,28,0" Width="44" Height="44" BorderBrush="#00707070" Click="Account_Button_Click" HorizontalAlignment="Right" VerticalAlignment="Top">
                <Button.Background>
                    <ImageBrush ImageSource="/loginButton.png"/>
                </Button.Background>
            </Button>
            <TextBox x:Name="SearchBar" Style="{DynamicResource TextBoxStyle1}" Tag="Search for your next favorite thing" Width="490" Height="35" FontSize="18" Margin="38,33,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" TextChanged="SearchBarTextChanged" Background="#FF4F83CC" BorderBrush="#FF4F83CC" Foreground="White" CaretBrush="#FF4F83CC" OpacityMask="#FF4F83CC" TextAlignment="Justify" SelectionBrush="#FFFFFF72" SelectionTextBrush="Black" BorderThickness="0,0,0,0" />
            <ComboBox x:Name="SearchDropdown" HorizontalAlignment="Left" VerticalAlignment="Top" Width="120" Height="35" SelectedIndex="0" BorderBrush="#FF4F83CC" Foreground="White" Background="#FF4F83CC" FontSize="20" FontStyle="Normal" Margin="528,33,0,0">
                <System:String>Artist</System:String>
                <System:String>Album</System:String>
                <System:String>Playlist</System:String>
                <System:String>Track</System:String>
            </ComboBox>
        </Grid>
        <Grid Grid.ColumnSpan="5">
            <WrapPanel x:Name="MusicBar" Background="Transparent" Height="96" VerticalAlignment="Bottom" Margin="-6,0,6,-97" >
                <WrapPanel x:Name="Track_ImageTitleArtist" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10">
                    <Image x:Name="TrackImage" Height="70" Width="70" Stretch="Uniform"/>
                    <StackPanel Margin="5,0,0,0" VerticalAlignment="Center">
                        <Label x:Name="Track_Name" Content="{Binding Title}"/>
                        <ItemsControl x:Name="icArtistList">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock x:Name="commaTextBlock" Text=", "/>
                                        <TextBlock Text="{Binding Name}"/>
                                    </StackPanel>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                                            <Setter Property="Visibility" TargetName="commaTextBlock" Value="Collapsed"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                    <ToggleButton x:Name="favoriteBtn" Width="30" Height="30" Margin="0,0,25,0" BorderThickness="0" Style="{StaticResource Heart}" Checked="favoriteBtn_Checked" Unchecked="favoriteBtn_Unchecked"/>
                </WrapPanel>
                <WrapPanel VerticalAlignment="Center" >
                    <ToggleButton x:Name="shuffleBtn" Height="32" Width="32" Margin="49,0,0,0" BorderThickness="0" Style="{StaticResource Shuffle}" Checked="shuffleBtn_Checked" Unchecked="shuffleBtn_Unchecked"/>
                    <Button x:Name="btnPrev" MouseDoubleClick="btnPrev_MouseDoubleClick" Click="btnPrev_Click" Width="32" Height="24" Margin="60,0,0,0" BorderThickness="0" Style="{StaticResource PrevNext}">
                        <Button.Background>
                            <ImageBrush ImageSource="/Rewind.png"/>
                        </Button.Background>
                        <Image Source="/Rewind.png"/>
                    </Button>
                    <ToggleButton x:Name="tbPlayPause" Checked = "TogglePlay" Unchecked = "TogglePause" Margin="60,0,0,0" Width="40" Height="40" BorderThickness="0" Style="{StaticResource PausePlay}" />
                    <Button x:Name="btnNext" Click="btnNext_Click" Width="32" Height="24" Margin="60,0,5,0" BorderThickness="0" Style="{StaticResource PrevNext}">
                        <Button.Background>
                            <ImageBrush ImageSource="/Forward.png"/>
                        </Button.Background>
                        <Image Source="/Forward.png"/>
                    </Button>
                    <ToggleButton x:Name="tbBtnRewind" Checked="btnRewind_Checked" Unchecked="btnRewind_Unchecked" Margin="60,0,5,0" Width="32" Height="32" BorderThickness="0" Style="{StaticResource Repeat}"/>
                </WrapPanel>
                <WrapPanel VerticalAlignment="Center">
                    <Label x:Name="CurrentTime" Content="00:00" Margin="100,0,0,0" VerticalAlignment="Center"/>
                    <Slider Style="{StaticResource Horizontal_Slider}" Minimum="0" Maximum="100" Value="0" x:Name="TimeStatus" Thumb.DragStarted="TimeStatus_DragStarted" Thumb.DragCompleted="TimeStatus_DragCompleted" Margin="0,3,0,0" Width="300" Height="15" />
                    <Label x:Name="TotalTime" Content="00:00" Margin="0,0,0,0"/>
                </WrapPanel>
                <WrapPanel VerticalAlignment="Center">
                    <Image Source="/Volume.png" Width="30" Height="30" Margin="25,0,0,0"/>
                    <Slider Style="{StaticResource Horizontal_Slider}" Value="25" Maximum="100" Minimum="0" ValueChanged="Volume_ValueChanged" x:Name="Volume" Width="142" Height="9" Margin="5"/>
                </WrapPanel>
            </WrapPanel>
        </Grid>

        <!-- the loginBackGround has to be visible if you want to change the loginGrid, RegisterGrid and the verify grid (put those grids on visible aswell) -->
        <Grid x:Name="LoginBackground" Background="#7F4F83CC" Grid.ColumnSpan="2" Grid.RowSpan="2" Visibility="Hidden" Margin="1,0,-1,-16" d:IsHidden="True">
            <!-- Login Grid and its components-->
            <Grid x:Name="LoginGrid" VerticalAlignment="Center" Width="552" Height="283" Background="White" Visibility="Visible">
                <Border CornerRadius="30" Margin="95,176,95,0" VerticalAlignment="Top" Width="363" Height="34" Grid.ColumnSpan="3" Background="#FF4F83CC" RenderTransformOrigin="0.5,0.5">
                    <Button Content="Login" VerticalAlignment="Top" Width="363" Height="34" Grid.ColumnSpan="2" Background="#004F83CC" Foreground="White" RenderTransformOrigin="0.5,0.5" BorderBrush="#00707070" HorizontalAlignment="Center" Click="Login_Click"/>
                </Border>
                <Button Content="Register" HorizontalAlignment="Center" Margin="0,227,0,0" VerticalAlignment="Top" Width="80" Height="30" Background="#00DDDDDD" BorderBrush="#00707070" Foreground="#FF4F83CC" Click="Register_Click"/>
                <TextBox x:Name="Email_TextBox" HorizontalAlignment="Center" Margin="0,70,0,0" Style="{StaticResource LoginInputs}" Tag="email@voorbeeld.nl&#xD;&#xA;" TextWrapping="Wrap" VerticalAlignment="Top" Width="364" Height="35" TextAlignment="Center" FontSize="24" Background="#7F4F83CC" Foreground="#7F000000" BorderBrush="#00ABADB3"/>
                <PasswordBox x:Name="Wachtwoord_TextBox" HorizontalAlignment="Center" VerticalAlignment="Center" Width="364" Height="31" FontSize="24" Foreground="Black" Background="#7F4F83CC" BorderBrush="#00ABADB3"/>
                <Label x:Name="Login_HeadsUp" Content="" HorizontalAlignment="Center" Height="23" Margin="0,153,0,0" VerticalAlignment="Top" Width="363" Foreground="Red"/>
                <Label x:Name="Password_Label_Copy" Content="Password:" HorizontalAlignment="Left" Height="21" Margin="94,105,0,0" VerticalAlignment="Top" Width="272" FontSize="10" FontWeight="Bold"/>
                <Label x:Name="Email_Label_Copy" Content="Email:" HorizontalAlignment="Left" Height="21" Margin="95,49,0,0" VerticalAlignment="Top" Width="272" FontSize="10" FontWeight="Bold"/>
                <Label Content="Login" HorizontalAlignment="Center" Height="56" Margin="0,4,0,0" VerticalAlignment="Top" Width="100" FontWeight="Bold" FontSize="32"/>
            </Grid>

            <!-- Register Grid and its components -->
            <Grid x:Name="RegisterGrid" Width="588" Height="605" Background="White" Visibility="Hidden">
                <TextBox x:Name="Email_Input" HorizontalAlignment="Center" Margin="0,176,0,0" Style="{StaticResource LoginInputs}" Tag="Email@example.com" TextWrapping="Wrap" VerticalAlignment="Top" Width="375" Height="42" Background="#7F4F83CC" TextAlignment="Center" FontSize="24"/>
                <TextBox x:Name="Username_Input" HorizontalAlignment="Center" Margin="0,238,0,325" Style="{StaticResource LoginInputs}" Tag="Username" TextWrapping="Wrap" Width="376" Background="#7F4F83CC" FontSize="24" TextAlignment="Center" Foreground="#7F000000"/>
                <PasswordBox x:Name="Password_Input" HorizontalAlignment="Center" Margin="0,300,0,0" Tag="Password" VerticalAlignment="Top" Width="375" Height="42" Background="#7F4F83CC" FontSize="24" Foreground="Black"/>
                <PasswordBox x:Name="PasswordRepeat_Input" HorizontalAlignment="Center" Margin="0,362,0,0" Tag="Repeat password" VerticalAlignment="Top" Width="375" Height="42" Background="#7F4F83CC" FontSize="24"/>
                <Border CornerRadius="30" Margin="112,441,112,0" VerticalAlignment="Top" Width="363" Height="34" Background="#FF4F83CC" RenderTransformOrigin="0.5,0.5">
                    <Button x:Name="Register_Button" Content="Register" HorizontalAlignment="Center" VerticalAlignment="Center" Width="384" Height="48" Background="#00DDDDDD" BorderBrush="#00707070" Foreground="White" Click="Register_Button_Click"/>
                </Border>
                <Button x:Name="Button_To_LoginWindow" Content="Login" HorizontalAlignment="Center" Margin="0,500,0,0" VerticalAlignment="Top" Width="60" Height="27" BorderBrush="#00707070" Background="#00DDDDDD" Click="Login_Button_Register"/>
                <Label x:Name="Title_Register" Content="Register" HorizontalAlignment="Center" Margin="0,63,0,0" VerticalAlignment="Top" FontSize="32" FontWeight="Bold"/>
                <Label x:Name="Register_Headsup" Content="" HorizontalAlignment="Center" Height="28" Margin="0,541,0,0" VerticalAlignment="Top" Width="312" Foreground="Red"/>
                <Label x:Name="Email_Label" Content="Email:" HorizontalAlignment="Left" Height="21" Margin="106,150,0,0" VerticalAlignment="Top" Width="272" FontSize="10" FontWeight="Bold"/>
                <Label x:Name="Username_Label" Content="Username:" HorizontalAlignment="Left" Height="21" Margin="106,217,0,0" VerticalAlignment="Top" Width="272" FontSize="10" FontWeight="Bold"/>
                <Label x:Name="Password_Label" Content="Password:" HorizontalAlignment="Left" Height="21" Margin="106,279,0,0" VerticalAlignment="Top" Width="272" FontSize="10" FontWeight="Bold"/>
                <Label x:Name="PasswordRepeat_Label" Content="Repeat password:" HorizontalAlignment="Left" Height="21" Margin="106,341,0,0" VerticalAlignment="Top" Width="272" FontSize="10" FontWeight="Bold"/>
            </Grid>

            <!-- this grid shows the account details of which you are logged in with -->
            <Grid x:Name="AccountDetailsGrid" Width="588" Height="605" Background="White" Visibility="Hidden">
                <TextBox x:Name="Details_Email_Input" HorizontalAlignment="Center" Margin="0,203,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="375" Height="42" Background="#7F4F83CC" TextAlignment="Center" FontSize="24" IsEnabled="True"/>
                <TextBox x:Name="Details_Username_Input" HorizontalAlignment="Center" Margin="0,302,0,261" TextWrapping="Wrap" Width="376" Background="#7F4F83CC" FontSize="24" TextAlignment="Center" Foreground="#7F000000" Height="42" IsEnabled="True"/>
                <TextBox x:Name="Details_Language_Input" HorizontalAlignment="Center" Margin="0,400,0,163" TextWrapping="Wrap" Width="376" Background="#7F4F83CC" FontSize="24" TextAlignment="Center" Foreground="#7F000000" Height="42" IsEnabled="False"/>
                <TextBlock HorizontalAlignment="Center" Margin="0,42,0,0" Text="Personal Info" TextWrapping="Wrap" VerticalAlignment="Top" Height="42" Width="376" TextAlignment="Center" FontSize="32" FontWeight="Bold"/>
                <TextBlock HorizontalAlignment="Left"  Margin="106,162,0,0" Text="Email:" TextWrapping="Wrap" VerticalAlignment="Top" Height="36" Width="110" FontSize="24"/>
                <TextBlock HorizontalAlignment="Left"  Margin="106,261,0,0" Text="Name:" TextWrapping="Wrap" VerticalAlignment="Top" Height="36" Width="110" FontSize="24"/>
                <TextBlock HorizontalAlignment="Left"  Margin="106,359,0,0" Text="Language:" TextWrapping="Wrap" VerticalAlignment="Top" Height="36" Width="110" FontSize="24"/>
                <TextBlock x:Name="Updated_Text" HorizontalAlignment="Left"  Margin="112,519,0,0" Text="*Updated account" TextWrapping="Wrap" VerticalAlignment="Top" Height="36" Width="224" FontSize="20" Visibility="Hidden" Opacity="0.8"/>

                <Button x:Name="Close_Account_Details" Content="X" HorizontalAlignment="Left" Margin="534,23,0,0" VerticalAlignment="Top" RenderTransformOrigin="-0.48,0.377" Width="22" Foreground="Red" Background="{x:Null}" BorderBrush="{x:Null}" Click="Close_Login_Button_Click" FontWeight="Bold"/>
                <Border CornerRadius="30" Margin="112,480,112,0" VerticalAlignment="Top" Width="363" Height="34" Background="#FF4F83CC" RenderTransformOrigin="0.5,0.5">
                    <Button x:Name="AccountDetailsButton" Content="Update" HorizontalAlignment="Center" VerticalAlignment="Center" Width="384" Height="48" Background="#00DDDDDD" BorderBrush="#00707070" Foreground="White" Click="AccountDetails_Button_Click"/>
                </Border>
            </Grid>

            <Grid x:Name="AddPlaylistGrid" Width="588" Height="340" Background="White" Visibility="Hidden" >
                <TextBox x:Name="Details_Title_Input" HorizontalAlignment="Left" Margin="100,131,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="375" Height="42" Background="#7F4F83CC" TextAlignment="Center" FontSize="24" IsEnabled="True"/>

                <CheckBox x:Name = "AddPlaylist_Private" Content ="Is public" HorizontalAlignment = "Left" 
                 Margin = "100,186,0,0" VerticalAlignment = "Top" Width = "100" Height="56" RenderTransformOrigin="0.5,0.5">
                    <CheckBox.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="2" ScaleY="2"/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform X="50" Y="30"/>
                        </TransformGroup>
                    </CheckBox.RenderTransform>
                </CheckBox>

                <TextBlock HorizontalAlignment="Center" Margin="0,23,0,0" Text="Create Playlist" TextWrapping="Wrap" VerticalAlignment="Top" Height="42" Width="376" TextAlignment="Center" FontSize="32" FontWeight="Bold"/>
                <TextBlock HorizontalAlignment="Left"  Margin="106,90,0,0" Text="Title:" TextWrapping="Wrap" VerticalAlignment="Top" Height="36" Width="110" FontSize="24"></TextBlock>
                <TextBlock x:Name="AddPlaylist_Comment" HorizontalAlignment="Left"  Margin="106,286,0,0" Text="*Please add a title" TextWrapping="Wrap" VerticalAlignment="Top" Height="36" Width="289" FontSize="24" Opacity="0.6" Visibility="Hidden"></TextBlock>

                <Button x:Name="Close_AddPlaylist_Details" Content="X" HorizontalAlignment="Left" Margin="534,23,0,0" VerticalAlignment="Top" RenderTransformOrigin="-0.48,0.377" Width="22" Foreground="Red" Background="{x:Null}" BorderBrush="{x:Null}" Click="Close_AddPlaylist_Button_Click" FontWeight="Bold"/>
                <Border CornerRadius="30" Margin="97,247,110,0" VerticalAlignment="Top" Width="363" Height="34" Background="#FF4F83CC" RenderTransformOrigin="0.5,0.5">
                    <Button x:Name="PlaylistDetailsButton" Content="Create" HorizontalAlignment="Center" VerticalAlignment="Center" Width="384" Height="48" Background="#00DDDDDD" BorderBrush="#00707070" Foreground="White" Click="PlaylistDetails_Button_Click"/>
                </Border>
            </Grid>

            <!-- this grid show the verification tab where a registered user can verify its email adress-->
            <Grid x:Name="VerifyGrid" VerticalAlignment="Center" Width="552" Height="283" Background="White" Visibility="Hidden">
                <Border CornerRadius="30" Margin="95,147,94,0" VerticalAlignment="Top" Width="363" Height="34" Background="#FF4F83CC" RenderTransformOrigin="0.5,0.5">
                    <Button Content="Verify" VerticalAlignment="Center" Width="363" Height="34" Grid.ColumnSpan="2" Background="#004F83CC" Foreground="White" RenderTransformOrigin="0.5,0.5" BorderBrush="#00707070" HorizontalAlignment="Center" FontSize="24" Click="Verify_Button_Click"/>
                </Border>
                <Button Content="Resend_code" HorizontalAlignment="Center" Margin="0,211,0,0" VerticalAlignment="Top" Width="260" Height="36" Background="#00DDDDDD" BorderBrush="#00707070" Foreground="#FF4F83CC" FontSize="24" Click="Resend_Code_Button"/>
                <TextBox x:Name="Verify_TextBox" HorizontalAlignment="Center" Margin="0,83,0,0" Style="{StaticResource LoginInputs}" Tag="Enter code" TextWrapping="Wrap" VerticalAlignment="Top" Width="364" Height="34" TextAlignment="Center" FontSize="24" Foreground="#7F000000" Background="#7F4F83CC" BorderBrush="#00ABADB3"/>
                <Label Content="Verification" HorizontalAlignment="Center" Height="58" Margin="0,12,0,0" VerticalAlignment="Top" Width="186" FontSize="32" FontWeight="Bold"/>
                <Label x:Name="Verification_Headsup" Content="" HorizontalAlignment="Center" Height="26" Margin="0,247,0,0" VerticalAlignment="Top" Width="363" Foreground="Red"/>
            </Grid>
        </Grid>
    </Grid>
</Window>
